# SPDX-FileCopyrightText: 2023 Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
from datetime import date
from datetime import datetime
from datetime import timedelta
from datetime import timezone
from uuid import UUID

import pytest

from manager_terminator.autogenerated_graphql_client import GetManagersManagersObjects
from manager_terminator.autogenerated_graphql_client import (
    GetManagersManagersObjectsObjects,
)
from manager_terminator.autogenerated_graphql_client import (
    GetManagersManagersObjectsObjectsEmployee,
)
from manager_terminator.autogenerated_graphql_client import (
    GetManagersManagersObjectsObjectsEmployeeEngagements,
)
from manager_terminator.autogenerated_graphql_client import (
    GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit,
)
from manager_terminator.autogenerated_graphql_client import (
    GetManagersManagersObjectsObjectsEmployeeEngagementsValidity,
)
from manager_terminator.autogenerated_graphql_client import (
    GetManagersManagersObjectsObjectsOrgUnit,
)
from manager_terminator.autogenerated_graphql_client import (
    GetManagersManagersObjectsObjectsValidity,
)
from manager_terminator.terminate_managers_init.find_no_engagement_managers import (
    extract_managers_with_no_persons_or_engagements,
)

TIMEZONE_OFFSET = timedelta(seconds=7200)


@pytest.mark.parametrize(
    "manager_role_end_date,  employee_objects_data, manager_org_unit_uuids, expected_result",
    [
        (  # There is no employee data. Set termination date to today.
            "2030-12-30T00:00:00+02:00",
            None,
            [
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                ),
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("6fc9ba6b-ca5b-5e09-a594-40363c45aae0")
                ),
            ],
            [
                {
                    "uuid": UUID("0b51953c-537b-4bf9-a872-2710b0ddd9e3"),
                    "termination_date": date.today().isoformat(),
                }
            ],
        ),
        (  # There are no engagements associated with the manager. Set termination date to today.
            "2023-07-18T00:00:00+02:00",
            [GetManagersManagersObjectsObjectsEmployee(engagements=[])],
            [
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                ),
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("3589b521-37b8-5e7f-9c1e-c89e1939e4e5")
                ),
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("fefb46ae-4dde-5530-80a8-0be34c7149f2")
                ),
            ],
            [
                {
                    "uuid": UUID("0b51953c-537b-4bf9-a872-2710b0ddd9e3"),
                    "termination_date": date.today().isoformat(),
                }
            ],
        ),
        (  # Engagement end date is farther than the managers end date.
            # Set termination to engagements end date.
            "2023-08-18T00:00:00+02:00",
            [
                GetManagersManagersObjectsObjectsEmployee(
                    engagements=[
                        GetManagersManagersObjectsObjectsEmployeeEngagements(
                            uuid=UUID("e6d1b0a8-df82-4397-b9e5-dfcf680ba7d2"),
                            org_unit=[
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                                )
                            ],
                            validity=GetManagersManagersObjectsObjectsEmployeeEngagementsValidity(
                                from_=datetime.fromisoformat(
                                    "2023-07-18T00:00:00+02:00"
                                ),
                                to=datetime.fromisoformat("2024-06-01T00:00:00+02:00"),
                            ),
                        )
                    ]
                )
            ],
            [
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                )
            ],
            [
                {
                    "uuid": UUID("0b51953c-537b-4bf9-a872-2710b0ddd9e3"),
                    "termination_date": datetime(
                        2024, 6, 1, 0, 0, tzinfo=timezone(TIMEZONE_OFFSET)
                    ),
                }
            ],
        ),
        (  # Manager end date is farther than engagements.
            # Set the termination to the farthest engagement date.
            "2345-01-01T00:00:00+02:00",
            [
                GetManagersManagersObjectsObjectsEmployee(
                    engagements=[
                        GetManagersManagersObjectsObjectsEmployeeEngagements(
                            uuid=UUID("e6d1b0a8-df82-4397-b9e5-dfcf680ba7d2"),
                            org_unit=[
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                                ),
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("7764d0c7-e776-5f07-8a9d-5ee6f5b717b0")
                                ),
                            ],
                            validity=GetManagersManagersObjectsObjectsEmployeeEngagementsValidity(
                                from_=datetime.fromisoformat(
                                    "2023-07-18T00:00:00+02:00"
                                ),
                                to=datetime.fromisoformat("2023-06-01T00:00:00+02:00"),
                            ),
                        )
                    ]
                )
            ],
            [
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                )
            ],
            [
                {
                    "uuid": UUID("0b51953c-537b-4bf9-a872-2710b0ddd9e3"),
                    "termination_date": datetime(
                        2023, 6, 1, 0, 0, tzinfo=timezone(TIMEZONE_OFFSET)
                    ),
                }
            ],
        ),
        (  # Manager end date is farther than several engagements.
            # Set the termination to the farthest engagement date from same org unit.
            # Multiple manager org unit uuids.
            "2121-12-21T00:00:00+02:00",
            [
                GetManagersManagersObjectsObjectsEmployee(
                    engagements=[
                        GetManagersManagersObjectsObjectsEmployeeEngagements(
                            uuid=UUID("e6d1b0a8-df82-4397-b9e5-dfcf680ba7d2"),
                            org_unit=[
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                                ),
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("7764d0c7-e776-5f07-8a9d-5ee6f5b717b0")
                                ),
                            ],
                            validity=GetManagersManagersObjectsObjectsEmployeeEngagementsValidity(
                                from_=datetime.fromisoformat(
                                    "2023-07-18T00:00:00+02:00"
                                ),
                                to=datetime.fromisoformat("2025-05-05T00:00:00+02:00"),
                            ),
                        ),
                        GetManagersManagersObjectsObjectsEmployeeEngagements(
                            uuid=UUID("2944d5c1-054d-419b-a86b-a7127bbc22f5"),
                            org_unit=[
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("f582e76e-3276-5c83-a48d-ef1fd7a58ce7")
                                ),
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("7764d0c7-e776-5f07-8a9d-5ee6f5b717b0")
                                ),
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("b4537f2b-b9d2-5fd8-b68a-04238401e9ad")
                                ),
                            ],
                            validity=GetManagersManagersObjectsObjectsEmployeeEngagementsValidity(
                                from_=datetime.fromisoformat(
                                    "2023-07-18T00:00:00+02:00"
                                ),
                                to=datetime.fromisoformat("2026-06-01T00:00:00+02:00"),
                            ),
                        ),
                        GetManagersManagersObjectsObjectsEmployeeEngagements(
                            uuid=UUID("c8522e20-0a38-40e3-a84b-bcc0ce5f6341"),
                            org_unit=[
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("ddc5c715-d63f-59a7-9f26-b4b2588a8152")
                                )
                            ],
                            validity=GetManagersManagersObjectsObjectsEmployeeEngagementsValidity(
                                from_=datetime.fromisoformat(
                                    "2023-07-18T00:00:00+02:00"
                                ),
                                to=datetime.fromisoformat("2027-06-01T00:00:00+02:00"),
                            ),
                        ),
                        GetManagersManagersObjectsObjectsEmployeeEngagements(
                            uuid=UUID("0959f658-1216-467e-b47b-90ec3e16d733"),
                            org_unit=[
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("ed3f6666-2a0b-5449-b388-3df81c082539")
                                ),
                                GetManagersManagersObjectsObjectsEmployeeEngagementsOrgUnit(
                                    uuid=UUID("10837513-021c-5b69-94c1-b53ffe0ce847")
                                ),
                            ],
                            validity=GetManagersManagersObjectsObjectsEmployeeEngagementsValidity(
                                from_=datetime.fromisoformat(
                                    "2023-07-18T00:00:00+02:00"
                                ),
                                to=datetime.fromisoformat("2028-06-01T00:00:00+02:00"),
                            ),
                        ),
                    ]
                ),
            ],
            [
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("13f3cebf-2625-564a-bcfc-31272eb9bce2")
                ),
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("cf4daae1-4812-41f1-8c47-63a99e26aadf")
                ),
                GetManagersManagersObjectsObjectsOrgUnit(
                    uuid=UUID("f06ee470-9f17-566f-acbe-e938112d46d9")
                ),
            ],
            [
                {
                    "uuid": UUID("0b51953c-537b-4bf9-a872-2710b0ddd9e3"),
                    "termination_date": datetime(
                        2025, 5, 5, 0, tzinfo=timezone(TIMEZONE_OFFSET)
                    ),
                }
            ],
        ),
    ],
)
def test_extract_managers_with_no_persons_or_engagements(
    manager_role_end_date,
    employee_objects_data,
    manager_org_unit_uuids,
    expected_result,
):
    test_objects = [
        GetManagersManagersObjects(
            objects=[
                GetManagersManagersObjectsObjects(
                    uuid=UUID("0b51953c-537b-4bf9-a872-2710b0ddd9e3"),
                    org_unit=manager_org_unit_uuids,
                    employee=employee_objects_data,
                    validity=GetManagersManagersObjectsObjectsValidity(
                        from_=datetime.fromisoformat("1975-12-08T00:00:00+01:00"),
                        to=datetime.fromisoformat(manager_role_end_date),
                    ),
                )
            ]
        )
    ]
    result = extract_managers_with_no_persons_or_engagements(test_objects)
    assert result == expected_result
